/*
socket은 통신을 위한 종착지 역할을 한다.
각 컴퓨터는 socket을 이용해 data를 교환한다.
TCP, UDP 두 방식이 있다.

TCP는 연결형. 느리지만 신뢰도 높음. 여러개의 패킷으로 나눠 송수신한다.
UDP는 비연결형. TCP에 비해 빠르고 신뢰성은 부족. 사전 통신 절차 ㄴㄴ

////////////////////////////////////////////////////////
TCP/IP 4layers

응용					응용
---------소켓----------------
전송					전송
인터넷					인터넷
물리	 	인터넷		물리

///////////////////////////////////////////////////////
서버&클라이언트 구조 : 가장 대표적인 네트워크 구성 모델.
모든 데이터의 관리와 처리가 서버에 집중된다.

//////////////////////////////////////////////////////
일반적인 소켓 프로그래밍

socket()					socket()
bind()
listen()
accept()					connect()
send(), recv()	--internet-- send(), recv()
closesocket()				closesocket()

///////////////////////////////////////////////
port
특정 프로그램이 통신을 하기 위해 포트 번호를 할당해야한다. 포트번호는 16비트이다.
1-1024는 시스템 포트이므로,,,  포트번호를 1025번 이상으로 선택해 미리 설정해야한다.

서버 프로그램의 포트번호는 명시적으로 할당해야한다. 클라이언트 프로그램이 서버의 ip주소와 포트번호를 알아야 접속이 가능하기 때문.

서버-클라이언트 연결 수립시 클라이언트 컴퓨터에서는 미사용인 임의 포트가 할당된다.

*/

